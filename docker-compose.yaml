version: '3.8'

services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter1
    healthcheck:
      test: ["CMD", "cqlsh", "cassandra", "-e", "DESCRIBE KEYSPACES"]
      interval: 30s
      timeout: 10s
      retries: 5

  cqlsh:
    image: cassandra:latest
    depends_on:
      cassandra:
        condition: service_healthy
    entrypoint: >
      bash -c "
      until cqlsh cassandra -e 'DESCRIBE KEYSPACES'; do
        echo 'Waiting for Cassandra to be ready...';
        sleep 5;
      done;
      cqlsh cassandra -f /scripts/init.cql"
    volumes:
      - ./init.cql:/scripts/init.cql

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis/redis-stack-server:7.2.0-v6
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis_data:/data

  doc_management_api:
    container_name: doc_management_api
    build: ./app/backend/reference_doc
    env_file:
      - .env
    ports:
      - ${DOC_FASTAPI_PORT}:${DOC_FASTAPI_PORT}
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=${JAEGER_AGENT_PORT}
    volumes:
      - ./data:/data
    deploy:
      resources:
        limits:
          memory: 4g
          cpus: "2.0"
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://doc_management_api:${DOC_FASTAPI_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  chat_api:
    container_name: chat_api
    build: ./app/backend/qa
    env_file:
      - .env
    ports:
      - ${CHAT_FASTAPI_PORT}:${CHAT_FASTAPI_PORT}
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=${JAEGER_AGENT_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CASSANDRA_PORT=9042
      - CASSANDRA_HOST=cassandra
      - ASM_GATEWAY_IP=${ASM_GATEWAY_IP}
    volumes:
      - ./init.cql:/init.cql
    depends_on:
      redis:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://chat_api:${CHAT_FASTAPI_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend_streamlit:
    container_name: frontend_streamlit
    build: ./app/frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=${JAEGER_AGENT_PORT}
      - NGINX_URL=nginx:${NGINX_PORT}
    depends_on:
      doc_management_api:
        condition: service_healthy
      chat_api:
        condition: service_healthy
    volumes:
      - ./app/frontend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend_streamlit:${FRONTEND_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:1.45
    environment: 
      - JAEGER_AGENT_PORT=6831
      - ${JAEGER_AGENT_PORT}:${JAEGER_AGENT_PORT}
      - COLLECTOR_ZIPKIN_HTTP_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14269:14269
      - 14250:14250
      - 9411:9411
      - 4317:4317
      - 4318:4318
    healthcheck:
      test: ["CMD", "curl", "-f", "http://jaeger:16686"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      chat_api:
        condition: service_healthy
      doc_management_api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  cassandra-data:

networks:
  default:
    name: mlops
